{"version":3,"sources":["containers/LoginForm/LoginForm.module.css","containers/RegisterForm/RegisterForm.module.css","components/NavigationBar/NavigationBar.module.css","apis/user-apis.js","containers/LoginForm/LoginForm.js","containers/RegisterForm/RegisterForm.js","hoc/Auxiliary/Auxiliary.js","components/NavigationBar/NavigationBar.js","apis/utils.js","apis/task-apis.js","apis/trigger-apis.js","apis/operation-apis.js","containers/Tasks/TaskList.js","containers/Tasks/Tasks.js","containers/Triggers/TriggerList.js","containers/Triggers/Triggers.js","containers/Operations/OperationList.js","containers/Operations/Operations.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","username","password","axios","post","config","LoginForm","props","state","error_message","inputChangeHandler","bind","formSubmitHandler","event","target","name","value","this","setState","preventDefault","userApis","then","response","localStorage","setItem","data","access_token","history","push","catch","error","exception","alert_box","Alert","variant","className","classes","formWrapper","Form","id","formSignin","onSubmit","Image","alt","src","Label","htmlFor","srOnly","Control","type","placeholder","required","autoFocus","onChange","Button","block","size","to","footer","Component","withRouter","RegisterForm","formRegister","Aux","children","NavigationBar","logoutClickHandler","removeItem","getItem","Navbar","bg","Brand","navLogo","Toggle","aria-controls","Collapse","Nav","activeClassName","Text","onClick","withToken","token","headers","Authorization","get","task_document","task_name","delete","trigger_document","trigger_name","operation_document","operation_name","TaskList","taskTableHeaders","tasks","triggers","operations","new_task_name","new_task_triggers","new_task_operations","operation","sub_operations","new_task_triggers_str","new_task_operations_str","new_task_new_trigger","new_task_new_operation","new_task_new_operation_parent","new_operation_id","taskDeleteClickHandler","addTriggerClickHandler","addOperationClickHandler","new_task_operation_map","root","JSON","stringify","taskApis","triggerApis","operationApis","task_triggers","task_operations","parse","parentElement","innerHTML","tree","op_id","i","length","sub_res","findOperation","new_operation_name","new_operation_parent","String","new_operation","task_rows","map","task","index","key","trigger_options","trigger","operation_options","operation_parent_options","op_key","Row","Table","striped","header","Group","as","controlId","readOnly","rows","Tasks","Container","TriggerList","triggerTableHeaders","new_trigger_name","new_trigger_type","new_trigger_schedule_time","new_trigger_schedule_repeat","triggerDeleteClickHandler","trigger_type","time","repeat","toLowerCase","other_fields","getDocumentOtherFields","trigger_rows","charAt","toUpperCase","slice","getFormOtherFields","defaultValue","Triggers","OperationList","operationTableHeaders","new_operation_type","new_operation_zoom_link","operationDeleteClickHandler","operation_type","link","path","new_operation_slides_path","operation_rows","getOtherFields","Operations","App","exact","Boolean","window","location","hostname","match","app","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,YAAc,+BAA+B,WAAa,8BAA8B,SAAW,4BAA4B,eAAe,gCAAgC,OAAS,4B,mBCAzMD,EAAOC,QAAU,CAAC,YAAc,kCAAkC,aAAe,mCAAmC,SAAW,+BAA+B,eAAe,mCAAmC,OAAS,+B,mBCAzND,EAAOC,QAAU,CAAC,QAAU,iC,8SCkBb,EAhBD,SAACC,EAAUC,GACvB,OAAOC,IAAMC,KACX,aACA,CAAEH,SAAUA,EAAUC,SAAUA,GAChCG,IAYW,EARE,SAACJ,EAAUC,GAC1B,OAAOC,IAAMC,KACX,gBACA,CAAEH,SAAUA,EAAUC,SAAUA,GAChCG,ICLEC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXP,SAAU,GACVC,SAAU,GACVO,cAAe,IAEjB,EAAKC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAC1B,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBARR,E,+DAWAE,GACjB,IAAMC,EAASD,EAAMC,OACfC,EAAOD,EAAOC,KACdC,EAAQF,EAAOE,MACY,KAA7BC,KAAKT,MAAMC,eACbQ,KAAKC,SAAS,CAAET,cAAe,KAEjCQ,KAAKC,SAAL,eACGH,EAAOC,M,wCAIMH,GAAQ,IAAD,OACvBA,EAAMM,iBACN,IAAMlB,EAAWgB,KAAKT,MAAMP,SACtBC,EAAWe,KAAKT,MAAMN,SACK,KAA7Be,KAAKT,MAAMC,eACbQ,KAAKC,SAAS,CAAET,cAAe,KAEjCW,EACSnB,EAAUC,GAChBmB,MAAK,SAACC,GACLC,aAAaC,QAAQ,aAAcF,EAASG,KAAKC,cACjDH,aAAaC,QAAQ,WAAYvB,GACjC,EAAKM,MAAMoB,QAAQC,KAAK,gBAEzBC,OAAM,SAACC,GACN,EAAKZ,SAAS,CACZT,cACEqB,EAAMR,SAASG,KAAKM,WAAa,sC,+BAMzC,IAAMC,EACyB,KAA7Bf,KAAKT,MAAMC,cAAuB,KAChC,kBAACwB,EAAA,EAAD,CAAOC,QAAQ,UAAUjB,KAAKT,MAAMC,eAExC,OACE,yBAAK0B,UAAWC,IAAQC,aACtB,kBAACC,EAAA,EAAD,CACEC,GAAG,aACHJ,UAAWC,IAAQI,WACnBC,SAAUxB,KAAKL,mBAEf,kBAAC8B,EAAA,EAAD,CACEP,UAAU,OACVQ,IAAI,kBACJC,IAAI,qBAEN,wBAAIT,UAAU,WAAd,WACCH,EACD,kBAACM,EAAA,EAAKO,MAAN,CAAYC,QAAQ,gBAAgBC,QAAQ,GAA5C,YAGA,kBAACT,EAAA,EAAKU,QAAN,CACEC,KAAK,OACLV,GAAG,gBACHxB,KAAK,WACLmC,YAAY,WACZC,UAAQ,EACRC,WAAS,EACTpC,MAAOC,KAAKT,MAAMP,SAClBoD,SAAUpC,KAAKP,qBAEjB,kBAAC4B,EAAA,EAAKO,MAAN,CAAYC,QAAQ,gBAAgBC,QAAQ,GAA5C,YAGA,kBAACT,EAAA,EAAKU,QAAN,CACEC,KAAK,WACLV,GAAG,gBACHxB,KAAK,WACLmC,YAAY,WACZC,UAAQ,EACRnC,MAAOC,KAAKT,MAAMN,SAClBmD,SAAUpC,KAAKP,qBAEjB,kBAAC4C,EAAA,EAAD,CAAQL,KAAK,SAASM,OAAO,EAAMC,KAAK,MAAxC,WAGA,kBAAC,IAAD,CAAMC,GAAG,aAAT,yBACA,uBAAGtB,UAAW,wBAA0BC,IAAQsB,QAAhD,oB,GA9FcC,aAqGTC,cAAWtD,G,iBCrGpBuD,E,kDACJ,WAAYtD,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXP,SAAU,GACVC,SAAU,GACVO,cAAe,IAEjB,EAAKC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAC1B,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBARR,E,+DAWAE,GACjB,IAAMC,EAASD,EAAMC,OACfC,EAAOD,EAAOC,KACdC,EAAQF,EAAOE,MACY,KAA7BC,KAAKT,MAAMC,eACbQ,KAAKC,SAAS,CAAET,cAAe,KAEjCQ,KAAKC,SAAL,eACGH,EAAOC,M,wCAIMH,GAAQ,IAAD,OACvBA,EAAMM,iBACN,IAAMlB,EAAWgB,KAAKT,MAAMP,SACtBC,EAAWe,KAAKT,MAAMN,SACK,KAA7Be,KAAKT,MAAMC,eACbQ,KAAKC,SAAS,CAAET,cAAe,KAEjCW,EACYnB,EAAUC,GACnBmB,MAAK,SAACC,GACLF,EAAenB,EAAUC,GAAUmB,MAAK,SAACC,GACvCC,aAAaC,QAAQ,aAAcF,EAASG,KAAKC,cACjDH,aAAaC,QAAQ,WAAYvB,GACjC,EAAKM,MAAMoB,QAAQC,KAAK,mBAG3BC,OAAM,SAACC,GACN,EAAKZ,SAAS,CACZT,cACEqB,EAAMR,SAASG,KAAKM,WAAa,sC,+BAMzC,IAAMC,EACyB,KAA7Bf,KAAKT,MAAMC,cAAuB,KAChC,kBAACwB,EAAA,EAAD,CAAOC,QAAQ,UAAUjB,KAAKT,MAAMC,eAExC,OACE,yBAAK0B,UAAWC,IAAQC,aACtB,kBAACC,EAAA,EAAD,CACEC,GAAG,gBACHJ,UAAWC,IAAQ0B,aACnBrB,SAAUxB,KAAKL,mBAEf,kBAAC8B,EAAA,EAAD,CACEP,UAAU,OACVQ,IAAI,kBACJC,IAAI,qBAEN,wBAAIT,UAAU,WAAd,WACCH,EACD,kBAACM,EAAA,EAAKO,MAAN,CAAYC,QAAQ,gBAAgBC,QAAQ,GAA5C,YAGA,kBAACT,EAAA,EAAKU,QAAN,CACEC,KAAK,OACLV,GAAG,gBACHxB,KAAK,WACLmC,YAAY,WACZC,UAAQ,EACRC,WAAS,EACTpC,MAAOC,KAAKT,MAAMP,SAClBoD,SAAUpC,KAAKP,qBAEjB,kBAAC4B,EAAA,EAAKO,MAAN,CAAYC,QAAQ,gBAAgBC,QAAQ,GAA5C,YAGA,kBAACT,EAAA,EAAKU,QAAN,CACEC,KAAK,WACLV,GAAG,gBACHxB,KAAK,WACLmC,YAAY,WACZC,UAAQ,EACRnC,MAAOC,KAAKT,MAAMN,SAClBmD,SAAUpC,KAAKP,qBAEjB,kBAAC4C,EAAA,EAAD,CAAQL,KAAK,SAASM,OAAO,EAAMC,KAAK,MAAxC,qBAGA,kBAAC,IAAD,CAAMC,GAAG,UAAT,iCACA,uBAAGtB,UAAW,wBAA0BC,IAAQsB,QAAhD,oB,GAhGiBC,aAuGZC,cAAWC,GC/GXE,EAFH,SAACxD,GAAD,OAAWA,EAAMyD,U,iCCSvBC,E,kDACJ,WAAY1D,GAAQ,IAAD,8BACjB,cAAMA,IAIR2D,mBAAqB,SAACrD,GACpBU,aAAa4C,WAAW,YACxB5C,aAAa4C,WAAW,cACxB,EAAK5D,MAAMoB,QAAQC,KAAK,WANxB,EAAK3B,SAAWsB,aAAa6C,QAAQ,YAFpB,E,qDAYjB,OACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOpC,QAAQ,QACxB,kBAACmC,EAAA,EAAOE,MAAR,KACE,kBAAC7B,EAAA,EAAD,CACEE,IAAI,mBACJD,IAAI,kBACJR,UAAW,QAAUC,IAAQoC,UAJjC,WAQA,kBAACH,EAAA,EAAOI,OAAR,CAAeC,gBAAc,KAC7B,kBAACL,EAAA,EAAOM,SAAR,CAAiBpC,GAAG,yBAClB,kBAACqC,EAAA,EAAD,CAAKzC,UAAU,WACb,kBAAC,IAAD,CACEsB,GAAG,YACHtB,UAAU,aACV0C,gBAAgB,UAHlB,YAOA,kBAAC,IAAD,CACEpB,GAAG,cACHtB,UAAU,kBACV0C,gBAAgB,UAHlB,cAOA,kBAAC,IAAD,CACEpB,GAAG,SACHtB,UAAU,kBACV0C,gBAAgB,UAHlB,UAQF,kBAACD,EAAA,EAAD,KACE,kBAACP,EAAA,EAAOS,KAAR,CAAa3C,UAAU,QAAvB,cACa,gCAASlB,KAAKhB,WAE3B,kBAACqD,EAAA,EAAD,CAAQpB,QAAQ,OAAO6C,QAAS9D,KAAKiD,oBAArC,iB,GApDgBP,aA8DbC,cAAWK,G,wBCvEpBe,EAAY,SAAC3E,EAAQ4E,GACzB,OAAO,2BAAK5E,GAAZ,IAAoB6E,QAAS,CAAEC,cAAc,UAAD,OAAYF,OCyB3C,EAtBI,WACjB,OAAO9E,IAAMiF,IACX,YACAJ,EAAU3E,EAAQkB,aAAa6C,QAAQ,iBAmB5B,EAfC,SAACiB,GACf,OAAOlF,IAAMC,KACX,YACAiF,EACAL,EAAU3E,EAAQkB,aAAa6C,QAAQ,iBAW5B,EAPI,SAACkB,GAClB,OAAOnF,IAAMoF,OACX,aAAeD,EACfN,EAAU3E,EAAQkB,aAAa6C,QAAQ,iBCI5B,EAtBO,WACpB,OAAOjE,IAAMiF,IACX,eACAJ,EAAU3E,EAAQkB,aAAa6C,QAAQ,iBAmB5B,EAfI,SAACoB,GAClB,OAAOrF,IAAMC,KACX,eACAoF,EACAR,EAAU3E,EAAQkB,aAAa6C,QAAQ,iBAW5B,EAPO,SAACqB,GACrB,OAAOtF,IAAMoF,OACX,gBAAkBE,EAClBT,EAAU3E,EAAQkB,aAAa6C,QAAQ,iBCI5B,EAtBS,WACtB,OAAOjE,IAAMiF,IACX,iBACAJ,EAAU3E,EAAQkB,aAAa6C,QAAQ,iBAmB5B,EAfM,SAACsB,GACpB,OAAOvF,IAAMC,KACX,iBACAsF,EACAV,EAAU3E,EAAQkB,aAAa6C,QAAQ,iBAW5B,EAPS,SAACuB,GACvB,OAAOxF,IAAMoF,OACX,kBAAoBI,EACpBX,EAAU3E,EAAQkB,aAAa6C,QAAQ,iB,gBCZrCwB,G,kDACJ,WAAYrF,GAAQ,IAAD,8BACjB,cAAMA,IACDsF,iBAAmB,CAAC,IAAK,OAAQ,WACtC,EAAKrF,MAAQ,CACXsF,MAAO,GACPC,SAAU,GACVC,WAAY,GACZC,cAAe,GACfC,kBAAmB,GACnBC,oBAAqB,CAAE5D,GAAI,OAAQ6D,UAAW,KAAMC,eAAgB,IACpEC,sBAAuB,KACvBC,wBAAyB,KACzBC,qBAAsB,GACtBC,uBAAwB,GACxBC,8BAA+B,GAC/BC,iBAAkB,GAGpB,EAAKjG,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAC1B,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBACzB,EAAKiG,uBAAyB,EAAKA,uBAAuBjG,KAA5B,gBAC9B,EAAKkG,uBAAyB,EAAKA,uBAAuBlG,KAA5B,gBAC9B,EAAKmG,yBAA2B,EAAKA,yBAAyBnG,KAA9B,gBAtBf,E,+DAyBAE,GACjB,IAAMC,EAASD,EAAMC,OACfC,EAAOD,EAAOC,KACdC,EAAQF,EAAOE,MACrBC,KAAKC,SAAL,eACGH,EAAOC,M,0CAIS,IAAD,OAClBC,KAAKC,SAAS,CACZ6F,uBAAwB,CAAEC,KAAM/F,KAAKT,MAAM2F,qBAC3CI,wBAAyBU,KAAKC,UAC5BjG,KAAKT,MAAM2F,oBACX,KACA,KAGJgB,IAAsB9F,MAAK,SAACC,GAC1B,EAAKJ,SAAS,CAAE4E,MAAOxE,EAASG,KAAKqE,WAEvCsB,IAA4B/F,MAAK,SAACC,GAChC,EAAKJ,SAAS,CAAE6E,SAAUzE,EAASG,KAAKsE,cAE1CsB,IAAgChG,MAAK,SAACC,GACpC,EAAKJ,SAAS,CAAE8E,WAAY1E,EAASG,KAAKuE,kB,wCAI5BnF,GAAQ,IAAD,OACvBA,EAAMM,iBACN,IAAMmE,EAAYrE,KAAKT,MAAMyF,cACvBqB,EAAgBrG,KAAKT,MAAM0F,kBAC3BqB,EAAkBN,KAAKO,MAAMvG,KAAKT,MAAM+F,yBAM9CY,EALoB,CAClBpG,KAAMuE,EACNS,SAAUuB,EACVtB,WAAYuB,IAEkBlG,MAAK,SAACC,GACpC6F,IAAsB9F,MAAK,SAACC,GAC1B,EAAKJ,SAAS,CAAE4E,MAAOxE,EAASG,KAAKqE,gB,6CAKpBjF,GAAQ,IAAD,OACtByE,EACJzE,EAAMC,OAAO2G,cAAcA,cAAczD,SAAS,GAAG0D,UACvDP,EAAoB7B,GAAWjE,MAAK,SAACC,GACnC6F,IAAsB9F,MAAK,SAACC,GAC1B,EAAKJ,SAAS,CAAE4E,MAAOxE,EAASG,KAAKqE,gB,6CAKpBjF,GACrB,IAAM4E,EAAe5E,EAAMC,OAAO2G,cAAczD,SAAS,GAAGhD,MACvC,KAAjByE,GACFxE,KAAKC,SAAS,CACZgF,kBAAkB,GAAD,mBAAMjF,KAAKT,MAAM0F,mBAAjB,CAAoCT,Q,oCAK7CkC,EAAMC,GAClB,GAAID,EAAI,KAAWC,EACjB,OAAOD,EAEP,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAI,eAAmBG,OAAQD,IAAK,CACtD,IAAIE,EAAU9G,KAAK+G,cAAcL,EAAI,eAAmBE,GAAID,GAC5D,GAAgB,OAAZG,EACF,OAAOA,EAIb,OAAO,O,+CAGgBlH,GACvB,IAAMoH,EAAqBpH,EAAMC,OAAO2G,cAAczD,SAAS,GAAGhD,MAC5DkH,EAAuBrH,EAAMC,OAAO2G,cAAczD,SAAS,GAAGhD,MACpE,GAA2B,KAAvBiH,GAAsD,KAAzBC,EAAjC,CACA,IAAMvB,EAAmBwB,OAAOlH,KAAKT,MAAMmG,kBACvCyB,EAAgB,CAClB7F,GAAIoE,EACJ5F,KAAMkH,EACN5B,eAAgB,IAEdU,EAAyBE,KAAKO,MAChCP,KAAKC,UAAUjG,KAAKT,MAAMuG,yBAE5BA,EAAuBJ,GAAoByB,EAC3C,IAAIjC,EAAsBc,KAAKO,MAC7BP,KAAKC,UAAUjG,KAAKT,MAAM2F,sBAEVlF,KAAK+G,cACrB7B,EACA+B,GAES,eAAmBtG,KAAKwG,GACnCnH,KAAKC,SAAS,CACZ6F,uBAAwBA,EACxBZ,oBAAqBA,EACrBQ,iBAAkB1F,KAAKT,MAAMmG,iBAAmB,EAChDJ,wBAAyBU,KAAKC,UAAUf,EAAqB,KAAM,Q,+BAI7D,IAAD,OACHkC,EAAYpH,KAAKT,MAAMsF,MAAMwC,KAAI,SAACC,EAAMC,GAC1C,OACE,wBAAIC,IAAK,YAAcD,GACrB,4BAAKA,EAAQ,GACb,4BAAKD,EAAKxH,MACV,4BACE,kBAACuC,EAAA,EAAD,CAAQE,KAAK,KAAKuB,QAAS,EAAK6B,wBAAhC,eAOJ8B,EAAkBzH,KAAKT,MAAMuF,SAASuC,KAAI,SAACK,EAASH,GACtD,OACE,4BAAQxH,MAAO2H,EAAQ5H,KAAM0H,IAAK,kBAAoBD,GACnDG,EAAQ5H,SAKX6H,EAAoB3H,KAAKT,MAAMwF,WAAWsC,KAAI,SAAClC,EAAWoC,GAC5D,OACE,4BAAQxH,MAAOoF,EAAUrF,KAAM0H,IAAK,oBAAsBD,GACvDpC,EAAUrF,SAKb8H,EAA2B,GAC/B,GAAI5H,KAAKT,MAAMuG,uBACb,IAAK,IAAI+B,KAAU7H,KAAKT,MAAMuG,uBAC5B8B,EAAyBjH,KACvB,4BAAQZ,MAAO8H,EAAQL,IAAK,UAAYK,GACrCA,IAMT,OACE,yBAAK3G,UAAU,QACb,yCACA,kBAAC4G,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAO7G,UAAU,aAAa8G,SAAS,GACrC,+BACE,4BACGhI,KAAK4E,iBAAiByC,KAAI,SAACY,GAAD,OACzB,wBAAIT,IAAK,UAAYS,GAASA,QAIpC,+BAAQb,KAGZ,iDACA,kBAAC/F,EAAA,EAAD,CAAMC,GAAG,mBAAmBE,SAAUxB,KAAKL,mBACzC,kBAAC0B,EAAA,EAAK6G,MAAN,CAAYC,GAAIL,IAAKM,UAAU,gBAC7B,kBAAC/G,EAAA,EAAKO,MAAN,CAAYC,QAAQ,aAApB,QACA,kBAACR,EAAA,EAAKU,QAAN,CACEC,KAAK,OACLV,GAAG,YACHxB,KAAK,gBACLmC,YAAY,YACZC,UAAQ,EACRnC,MAAOC,KAAKT,MAAMyF,cAClB5C,SAAUpC,KAAKP,sBAGnB,kBAAC4B,EAAA,EAAK6G,MAAN,CAAYC,GAAIL,IAAKM,UAAU,oBAC7B,kBAAC/G,EAAA,EAAKO,MAAN,CAAYC,QAAQ,iBAApB,YACA,kBAACR,EAAA,EAAKU,QAAN,CACEC,KAAK,OACLV,GAAG,gBACHxB,KAAK,wBACLmC,YAAY,gBACZC,UAAQ,EACRmG,UAAQ,EACRtI,MAAOiG,KAAKC,UAAUjG,KAAKT,MAAM0F,qBAEnC,kBAAC5D,EAAA,EAAKU,QAAN,CACEoG,GAAG,SACH7G,GAAG,uBACHxB,KAAK,uBACLC,MAAOC,KAAKT,MAAMgG,qBAClBrE,UAAU,OACVkB,SAAUpC,KAAKP,oBAEf,4BAAQM,MAAM,IAAd,+BACC0H,GAEH,kBAACpF,EAAA,EAAD,CACEL,KAAK,SACLO,KAAK,KACLrB,UAAU,OACV4C,QAAS9D,KAAK4F,wBAJhB,sBASF,kBAACvE,EAAA,EAAK6G,MAAN,CAAYC,GAAIL,IAAKM,UAAU,sBAC7B,kBAAC/G,EAAA,EAAKO,MAAN,CAAYC,QAAQ,mBAApB,cACA,kBAACR,EAAA,EAAKU,QAAN,CACEoG,GAAG,WACHG,KAAK,KACLhH,GAAG,kBACHxB,KAAK,0BACLmC,YAAY,kBACZC,UAAQ,EACRnC,MAAOC,KAAKT,MAAM+F,wBAClBlD,SAAUpC,KAAKP,mBACf4I,UAAQ,IAEV,kBAAChH,EAAA,EAAKU,QAAN,CACEoG,GAAG,SACH7G,GAAG,yBACHxB,KAAK,yBACLC,MAAOC,KAAKT,MAAMiG,uBAClBtE,UAAU,OACVkB,SAAUpC,KAAKP,oBAEf,4BAAQM,MAAM,IAAd,iCACC4H,GAEH,kBAACtG,EAAA,EAAKU,QAAN,CACEoG,GAAG,SACH7G,GAAG,gCACHxB,KAAK,gCACLC,MAAOC,KAAKT,MAAMkG,8BAClBvE,UAAU,OACVkB,SAAUpC,KAAKP,oBAEf,4BAAQM,MAAM,IAAd,4CACC6H,GAEH,kBAACvF,EAAA,EAAD,CACEL,KAAK,SACLO,KAAK,KACLrB,UAAU,OACV4C,QAAS9D,KAAK6F,0BAJhB,wBASF,kBAACxD,EAAA,EAAD,CAAQL,KAAK,SAASO,KAAK,MAA3B,gB,GAxRaG,aAiSRC,eAAWgC,ICpSpB4D,G,kDACJ,WAAYjJ,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAMjB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAACiJ,EAAA,EAAD,KACE,kBAAC,GAAD,Y,GAXU9F,aAkBLC,eAAW4F,IChBpBE,G,kDACJ,WAAYnJ,GAAQ,IAAD,8BACjB,cAAMA,IACDoJ,oBAAsB,CAAC,IAAK,OAAQ,OAAQ,WACjD,EAAKnJ,MAAQ,CACXuF,SAAU,GACV6D,iBAAkB,GAClBC,iBAAkB,WAClBC,0BAA2B,QAC3BC,4BAA6B,OAE/B,EAAKrJ,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAC1B,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBACzB,EAAKqJ,0BAA4B,EAAKA,0BAA0BrJ,KAA/B,gBAZhB,E,+DAeAE,GACjB,IAAMC,EAASD,EAAMC,OACfC,EAAOD,EAAOC,KACdC,EAAQF,EAAOE,MACrBC,KAAKC,SAAL,eACGH,EAAOC,M,0CAIS,IAAD,OAClBoG,IAA4B/F,MAAK,SAACC,GAChC,EAAKJ,SAAS,CACZ6E,SAAUzE,EAASG,KAAKsE,gB,2CAM5B,OAAQ9E,KAAKT,MAAMqJ,kBACjB,IAAK,WACH,OACE,kBAAC,EAAD,KACE,kBAACvH,EAAA,EAAKO,MAAN,CAAYC,QAAQ,wBAAwBX,UAAU,QAAtD,QAGA,kBAACG,EAAA,EAAKU,QAAN,CACEC,KAAK,OACLV,GAAG,wBACHxB,KAAK,4BACLC,MAAOC,KAAKT,MAAMsJ,0BAClBzG,SAAUpC,KAAKP,qBAEjB,kBAAC4B,EAAA,EAAKO,MAAN,CAAYC,QAAQ,0BAA0BX,UAAU,QAAxD,UAGA,kBAACG,EAAA,EAAKU,QAAN,CACEoG,GAAG,SACH7G,GAAG,0BACHxB,KAAK,8BACLC,MAAOC,KAAKT,MAAMuJ,4BAClB1G,SAAUpC,KAAKP,oBAEf,uCACA,0CAMV,OAAO,O,6CAGcuJ,GACrB,OAAQA,GACN,IAAK,WACH,MAAO,CACLC,KAAMjJ,KAAKT,MAAMsJ,0BACjBK,OAAQlJ,KAAKT,MAAMuJ,4BAA4BK,kB,wCAMrCvJ,GAAQ,IAAD,OACvBA,EAAMM,iBACN,IAAMsE,EAAexE,KAAKT,MAAMoJ,iBAC1BK,EAAehJ,KAAKT,MAAMqJ,iBAC1BQ,EAAepJ,KAAKqJ,uBAAuBL,GAC7CzE,EAAgB,aAClBzE,KAAM0E,EACNxC,KAAMgH,EAAaG,eAChBC,GAELjD,EAAuB5B,GAAkBnE,MAAK,SAACC,GAC7C8F,IAA4B/F,MAAK,SAACC,GAChC,EAAKJ,SAAS,CACZ6E,SAAUzE,EAASG,KAAKsE,mB,gDAMNlF,GAAQ,IAAD,OACzB4E,EACJ5E,EAAMC,OAAO2G,cAAcA,cAAczD,SAAS,GAAG0D,UACvDN,EAA0B3B,GAAcpE,MAAK,SAACC,GAC5C8F,IAA4B/F,MAAK,SAACC,GAChC,EAAKJ,SAAS,CACZ6E,SAAUzE,EAASG,KAAKsE,mB,+BAMtB,IAAD,OACHwE,EAAetJ,KAAKT,MAAMuF,SAASuC,KAAI,SAACK,EAASH,GACnD,OACE,wBAAIC,IAAK,eAAiBD,GACxB,4BAAKA,EAAQ,GACb,4BAAKG,EAAQ5H,MACb,4BACG4H,EAAQ1F,KAAKuH,OAAO,GAAGC,cAAgB9B,EAAQ1F,KAAKyH,MAAM,IAE7D,4BACE,kBAACpH,EAAA,EAAD,CAAQE,KAAK,KAAKuB,QAAS,EAAKiF,2BAAhC,eAOJK,EAAepJ,KAAK0J,qBACxB,OACE,yBAAKxI,UAAU,QACb,4CACA,kBAAC4G,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAO7G,UAAU,gBAAgB8G,SAAS,GACxC,+BACE,4BACGhI,KAAK0I,oBAAoBrB,KAAI,SAACY,GAAD,OAC5B,wBAAIT,IAAK,UAAYS,GAASA,QAIpC,+BAAQqB,KAGZ,oDACA,kBAACjI,EAAA,EAAD,CAAMC,GAAG,sBAAsBE,SAAUxB,KAAKL,mBAC5C,kBAAC0B,EAAA,EAAK6G,MAAN,CAAYC,GAAIL,IAAKM,UAAU,mBAC7B,kBAAC/G,EAAA,EAAKO,MAAN,CAAYC,QAAQ,gBAApB,QACA,kBAACR,EAAA,EAAKU,QAAN,CACEC,KAAK,OACLV,GAAG,eACHxB,KAAK,mBACLmC,YAAY,eACZC,UAAQ,EACRnC,MAAOC,KAAKT,MAAMoJ,iBAClBvG,SAAUpC,KAAKP,qBAEjB,kBAAC4B,EAAA,EAAKO,MAAN,CAAYC,QAAQ,eAAeX,UAAU,QAA7C,QAGA,kBAACG,EAAA,EAAKU,QAAN,CACEoG,GAAG,SACH7G,GAAG,eACHxB,KAAK,mBACL6J,aAAa,YACbzH,UAAQ,EACRnC,MAAOC,KAAKT,MAAMqJ,iBAClBxG,SAAUpC,KAAKP,oBAEf,6CAED2J,GAEH,kBAAC/G,EAAA,EAAD,CAAQL,KAAK,SAASO,KAAK,MAA3B,gB,GA5KgBG,aAqLXC,eAAW8F,ICvLpBmB,G,kDACJ,WAAYtK,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAMjB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAACiJ,EAAA,EAAD,KACE,kBAAC,GAAD,Y,GAXa9F,aAkBRC,eAAWiH,IChBpBC,G,kDACJ,WAAYvK,GAAQ,IAAD,8BACjB,cAAMA,IACDwK,sBAAwB,CAAC,IAAK,OAAQ,OAAQ,WACnD,EAAKvK,MAAQ,CACXwF,WAAY,GACZiC,mBAAoB,GACpB+C,mBAAoB,OACpBC,wBAAyB,IAE3B,EAAKvK,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAC1B,EAAKuK,4BAA8B,EAAKA,4BAA4BvK,KAAjC,gBAGnC,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBAbR,E,gEAgBE,IAAD,OAClB0G,IAAgChG,MAAK,SAACC,GACpC,EAAKJ,SAAS,CACZ8E,WAAY1E,EAASG,KAAKuE,kB,yCAKbnF,GACjB,IAAMC,EAASD,EAAMC,OACfC,EAAOD,EAAOC,KACdC,EAAQF,EAAOE,MACrBC,KAAKC,SAAL,eACGH,EAAOC,M,kDAIgBH,GAAQ,IAAD,OAC3B8E,EACJ9E,EAAMC,OAAO2G,cAAcA,cAAczD,SAAS,GAAG0D,UACvDL,EAA8B1B,GAAgBtE,MAAK,SAACC,GAClD+F,IAAgChG,MAAK,SAACC,GACpC,EAAKJ,SAAS,CACZ8E,WAAY1E,EAASG,KAAKuE,qB,wCAMhBnF,GAAQ,IAAD,OACvBA,EAAMM,iBACN,IAAMwE,EAAiB1E,KAAKT,MAAMyH,mBAC5BkD,EAAiBlK,KAAKT,MAAMwK,mBAC9BX,EAAe,GACI,SAAnBc,EACFd,EAAe,CAAEe,KAAMnK,KAAKT,MAAMyK,yBACN,gBAAnBE,IACTd,EAAe,CAAEgB,KAAMpK,KAAKT,MAAM8K,4BAEpC,IAAI5F,EAAkB,aACpB3E,KAAM4E,EACN1C,KAAMkI,EAAef,eAClBC,GAGLhD,EAA2B3B,GAAoBrE,MAAK,SAACC,GACnD+F,IAAgChG,MAAK,SAACC,GACpC,EAAKJ,SAAS,CACZ8E,WAAY1E,EAASG,KAAKuE,qB,uCAOhC,MAAsC,SAAlC/E,KAAKT,MAAMwK,mBAEX,kBAAC,EAAD,KACE,kBAAC1I,EAAA,EAAKO,MAAN,CAAYC,QAAQ,sBAAsBX,UAAU,QAApD,QAGA,kBAACG,EAAA,EAAKU,QAAN,CACEC,KAAK,OACLV,GAAG,sBACHxB,KAAK,0BACLC,MAAOC,KAAKT,MAAMyK,wBAClB5H,SAAUpC,KAAKP,sBAIsB,gBAAlCO,KAAKT,MAAMwK,mBAElB,kBAAC,EAAD,KACE,kBAAC1I,EAAA,EAAKO,MAAN,CAAYC,QAAQ,wBAAwBX,UAAU,QAAtD,gBAGA,kBAACG,EAAA,EAAKU,QAAN,CACEC,KAAK,OACLV,GAAG,wBACHxB,KAAK,4BACLC,MAAOC,KAAKT,MAAM8K,0BAClBjI,SAAUpC,KAAKP,2BAXhB,I,+BAkBC,IAAD,OACH6K,EAAiBtK,KAAKT,MAAMwF,WAAWsC,KAAI,SAAClC,EAAWoC,GACzD,OACE,wBAAIC,IAAK,iBAAmBD,GAC1B,4BAAKA,EAAQ,GACb,4BAAKpC,EAAUrF,MACf,4BACGqF,EAAUnD,KAAKuH,OAAO,GAAGC,cAAgBrE,EAAUnD,KAAKyH,MAAM,IAEjE,4BACE,kBAACpH,EAAA,EAAD,CAAQE,KAAK,KAAKuB,QAAS,EAAKmG,6BAAhC,eAQJb,EAAepJ,KAAKuK,iBAExB,OACE,yBAAKrJ,UAAU,QACb,8CACA,kBAAC4G,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAO7G,UAAU,kBAAkB8G,SAAS,GAC1C,+BACE,4BACGhI,KAAK8J,sBAAsBzC,KAAI,SAACY,GAAD,OAC9B,wBAAIT,IAAK,UAAYS,GAASA,QAIpC,+BAAQqC,KAGZ,sDACA,kBAACjJ,EAAA,EAAD,CAAMC,GAAG,wBAAwBE,SAAUxB,KAAKL,mBAC9C,kBAAC0B,EAAA,EAAK6G,MAAN,CAAYC,GAAIL,IAAKM,UAAU,qBAC7B,kBAAC/G,EAAA,EAAKO,MAAN,CAAYC,QAAQ,kBAApB,QACA,kBAACR,EAAA,EAAKU,QAAN,CACEC,KAAK,OACLV,GAAG,iBACHxB,KAAK,qBACLmC,YAAY,iBACZC,UAAQ,EACRnC,MAAOC,KAAKT,MAAMyH,mBAClB5E,SAAUpC,KAAKP,qBAEjB,kBAAC4B,EAAA,EAAKO,MAAN,CAAYC,QAAQ,iBAAiBX,UAAU,QAA/C,QAGA,kBAACG,EAAA,EAAKU,QAAN,CACEoG,GAAG,SACH7G,GAAG,iBACHxB,KAAK,qBACL6J,aAAa,YACbzH,UAAQ,EACRnC,MAAOC,KAAKT,MAAMwK,mBAClB3H,SAAUpC,KAAKP,oBAEf,wCACA,gDAED2J,GAEH,kBAAC/G,EAAA,EAAD,CAAQL,KAAK,SAASO,KAAK,MAA3B,gB,GA1KkBG,aAmLbC,eAAWkH,ICrLpBW,G,kDACJ,WAAYlL,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAMjB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAACiJ,EAAA,EAAD,KACE,kBAAC,GAAD,Y,GAXe9F,aAkBVC,eAAW6H,ICWXC,OA3Bf,WACE,OACE,yBAAKvJ,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkJ,KAAK,IAAIM,OAAK,GACnB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAON,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,eACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,GAAD,UCjBUO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,UCVAC,GACJ,kBAAC,IAAD,KACE,kBAAC,GAAD,OAIJC,IAASC,OACP,kBAAC,IAAMC,WAAP,KAAmBH,IACnBI,SAASC,eAAe,SDmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpL,MAAK,SAACqL,GACLA,EAAaC,gBAEd9K,OAAM,SAACC,GACN8K,QAAQ9K,MAAMA,EAAM+K,c","file":"static/js/main.7146353d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"LoginForm_formWrapper__3uzRr\",\"formSignin\":\"LoginForm_formSignin__1E3CM\",\"checkbox\":\"LoginForm_checkbox__39TGO\",\"form-control\":\"LoginForm_form-control__2Bhgs\",\"footer\":\"LoginForm_footer__1vOqs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"RegisterForm_formWrapper__1weup\",\"formRegister\":\"RegisterForm_formRegister__1b8AC\",\"checkbox\":\"RegisterForm_checkbox__2yFwt\",\"form-control\":\"RegisterForm_form-control__1ZTWX\",\"footer\":\"RegisterForm_footer__21xEE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLogo\":\"NavigationBar_navLogo__3KQFf\"};","import axios from 'axios';\nimport config from './config.json';\n\nconst login = (username, password) => {\n  return axios.post(\n    '/api/login',\n    { username: username, password: password },\n    config\n  );\n};\n\nconst register = (username, password) => {\n  return axios.post(\n    '/api/register',\n    { username: username, password: password },\n    config\n  );\n};\n\nexport default { login, register };\n","import React, { Component } from 'react';\nimport classes from './LoginForm.module.css';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport { withRouter } from 'react-router-dom';\nimport userApis from '../../apis/user-apis';\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      error_message: '',\n    };\n    this.inputChangeHandler = this.inputChangeHandler.bind(this);\n    this.formSubmitHandler = this.formSubmitHandler.bind(this);\n  }\n\n  inputChangeHandler(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    if (this.state.error_message !== '') {\n      this.setState({ error_message: '' });\n    }\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  formSubmitHandler(event) {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n    if (this.state.error_message !== '') {\n      this.setState({ error_message: '' });\n    }\n    userApis\n      .login(username, password)\n      .then((response) => {\n        localStorage.setItem('auth_token', response.data.access_token);\n        localStorage.setItem('username', username);\n        this.props.history.push('/triggers');\n      })\n      .catch((error) => {\n        this.setState({\n          error_message:\n            error.response.data.exception || 'Invalid Username or Password',\n        });\n      });\n  }\n\n  render() {\n    const alert_box =\n      this.state.error_message === '' ? null : (\n        <Alert variant=\"danger\">{this.state.error_message}</Alert>\n      );\n    return (\n      <div className={classes.formWrapper}>\n        <Form\n          id=\"login-form\"\n          className={classes.formSignin}\n          onSubmit={this.formSubmitHandler}\n        >\n          <Image\n            className=\"mb-4\"\n            alt=\"Mycroft - Water\"\n            src=\"/assets/logo.png\"\n          />\n          <h1 className=\"h3 mb-3\">Mycroft</h1>\n          {alert_box}\n          <Form.Label htmlFor=\"inputUsername\" srOnly={true}>\n            Username\n          </Form.Label>\n          <Form.Control\n            type=\"text\"\n            id=\"inputUsername\"\n            name=\"username\"\n            placeholder=\"Username\"\n            required\n            autoFocus\n            value={this.state.username}\n            onChange={this.inputChangeHandler}\n          />\n          <Form.Label htmlFor=\"inputPassword\" srOnly={true}>\n            Password\n          </Form.Label>\n          <Form.Control\n            type=\"password\"\n            id=\"inputPassword\"\n            name=\"password\"\n            placeholder=\"Password\"\n            required\n            value={this.state.password}\n            onChange={this.inputChangeHandler}\n          />\n          <Button type=\"submit\" block={true} size=\"lg\">\n            Sign in\n          </Button>\n          <Link to=\"/register\">Create an new account</Link>\n          <p className={'mt-3 mb-3 text-muted ' + classes.footer}>Team Water</p>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LoginForm);\n","import React, { Component } from 'react';\nimport classes from './RegisterForm.module.css';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport userApis from '../../apis/user-apis';\nimport { withRouter } from 'react-router-dom';\n\nclass RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      error_message: '',\n    };\n    this.inputChangeHandler = this.inputChangeHandler.bind(this);\n    this.formSubmitHandler = this.formSubmitHandler.bind(this);\n  }\n\n  inputChangeHandler(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    if (this.state.error_message !== '') {\n      this.setState({ error_message: '' });\n    }\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  formSubmitHandler(event) {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n    if (this.state.error_message !== '') {\n      this.setState({ error_message: '' });\n    }\n    userApis\n      .register(username, password)\n      .then((response) => {\n        userApis.login(username, password).then((response) => {\n          localStorage.setItem('auth_token', response.data.access_token);\n          localStorage.setItem('username', username);\n          this.props.history.push('/triggers');\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          error_message:\n            error.response.data.exception || 'Invalid Username or Password',\n        });\n      });\n  }\n\n  render() {\n    const alert_box =\n      this.state.error_message === '' ? null : (\n        <Alert variant=\"danger\">{this.state.error_message}</Alert>\n      );\n    return (\n      <div className={classes.formWrapper}>\n        <Form\n          id=\"register-form\"\n          className={classes.formRegister}\n          onSubmit={this.formSubmitHandler}\n        >\n          <Image\n            className=\"mb-4\"\n            alt=\"Mycroft - Water\"\n            src=\"/assets/logo.png\"\n          />\n          <h1 className=\"h3 mb-3\">Mycroft</h1>\n          {alert_box}\n          <Form.Label htmlFor=\"inputUsername\" srOnly={true}>\n            Username\n          </Form.Label>\n          <Form.Control\n            type=\"text\"\n            id=\"inputUsername\"\n            name=\"username\"\n            placeholder=\"Username\"\n            required\n            autoFocus\n            value={this.state.username}\n            onChange={this.inputChangeHandler}\n          />\n          <Form.Label htmlFor=\"inputPassword\" srOnly={true}>\n            Password\n          </Form.Label>\n          <Form.Control\n            type=\"password\"\n            id=\"inputPassword\"\n            name=\"password\"\n            placeholder=\"Password\"\n            required\n            value={this.state.password}\n            onChange={this.inputChangeHandler}\n          />\n          <Button type=\"submit\" block={true} size=\"lg\">\n            Create an account\n          </Button>\n          <Link to=\"/login\">Sign in with an existing user</Link>\n          <p className={'mt-3 mb-3 text-muted ' + classes.footer}>Team Water</p>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(RegisterForm);\n","const Aux = (props) => props.children;\n\nexport default Aux;\n","import React, { Component } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Image from 'react-bootstrap/Image';\nimport classes from './NavigationBar.module.css';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport { NavLink } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\n\nclass NavigationBar extends Component {\n  constructor(props) {\n    super(props);\n    this.username = localStorage.getItem('username');\n  }\n\n  logoutClickHandler = (event) => {\n    localStorage.removeItem('username');\n    localStorage.removeItem('auth_token');\n    this.props.history.push('/login');\n  };\n\n  render() {\n    return (\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand>\n          <Image\n            src=\"/assets/logo.png\"\n            alt=\"Mycroft - Water\"\n            className={'mr-2 ' + classes.navLogo}\n          />\n          Mycroft\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <NavLink\n              to=\"/triggers\"\n              className=\"text-light\"\n              activeClassName=\"active\"\n            >\n              Triggers\n            </NavLink>\n            <NavLink\n              to=\"/operations\"\n              className=\"text-light ml-4\"\n              activeClassName=\"active\"\n            >\n              Operations\n            </NavLink>\n            <NavLink\n              to=\"/tasks\"\n              className=\"text-light ml-4\"\n              activeClassName=\"active\"\n            >\n              Tasks\n            </NavLink>\n          </Nav>\n          <Nav>\n            <Navbar.Text className=\"mr-3\">\n              Sign in as <strong>{this.username}</strong>\n            </Navbar.Text>\n            <Button variant=\"info\" onClick={this.logoutClickHandler}>\n              Logout\n            </Button>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default withRouter(NavigationBar);\n","const withToken = (config, token) => {\n  return { ...config, headers: { Authorization: `Bearer ${token}` } };\n};\n\nconst withParams = (config, params) => {\n  return { ...config, params: params };\n};\n\nconst getToken = () => {\n  return localStorage.getItem('token');\n};\n\nexport { withToken, withParams, getToken };\n","import axios from 'axios';\nimport config from './config.json';\nimport { withToken } from './utils';\n\nconst fetchTasks = () => {\n  return axios.get(\n    'api/tasks',\n    withToken(config, localStorage.getItem('auth_token'))\n  );\n};\n\nconst addTask = (task_document) => {\n  return axios.post(\n    'api/tasks',\n    task_document,\n    withToken(config, localStorage.getItem('auth_token'))\n  );\n};\n\nconst deleteTask = (task_name) => {\n  return axios.delete(\n    'api/tasks/' + task_name,\n    withToken(config, localStorage.getItem('auth_token'))\n  );\n};\n\nexport default { fetchTasks, addTask, deleteTask };\n","import axios from 'axios';\nimport config from './config.json';\nimport { withToken } from './utils';\n\nconst fetchTriggers = () => {\n  return axios.get(\n    'api/triggers',\n    withToken(config, localStorage.getItem('auth_token'))\n  );\n};\n\nconst addTrigger = (trigger_document) => {\n  return axios.post(\n    'api/triggers',\n    trigger_document,\n    withToken(config, localStorage.getItem('auth_token'))\n  );\n};\n\nconst deleteTrigger = (trigger_name) => {\n  return axios.delete(\n    'api/triggers/' + trigger_name,\n    withToken(config, localStorage.getItem('auth_token'))\n  );\n};\n\nexport default { fetchTriggers, addTrigger, deleteTrigger };\n","import axios from 'axios';\nimport config from './config.json';\nimport { withToken } from './utils';\n\nconst fetchOperations = () => {\n  return axios.get(\n    'api/operations',\n    withToken(config, localStorage.getItem('auth_token'))\n  );\n};\n\nconst addOperation = (operation_document) => {\n  return axios.post(\n    'api/operations',\n    operation_document,\n    withToken(config, localStorage.getItem('auth_token'))\n  );\n};\n\nconst deleteOperation = (operation_name) => {\n  return axios.delete(\n    'api/operations/' + operation_name,\n    withToken(config, localStorage.getItem('auth_token'))\n  );\n};\n\nexport default { fetchOperations, addOperation, deleteOperation };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport taskApis from '../../apis/task-apis';\nimport triggerApis from '../../apis/trigger-apis';\nimport operationApis from '../../apis/operation-apis';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Table from 'react-bootstrap/Table';\nimport Form from 'react-bootstrap/Form';\n\nclass TaskList extends Component {\n  constructor(props) {\n    super(props);\n    this.taskTableHeaders = ['#', 'Name', 'Actions'];\n    this.state = {\n      tasks: [],\n      triggers: [],\n      operations: [],\n      new_task_name: '',\n      new_task_triggers: [],\n      new_task_operations: { id: 'root', operation: null, sub_operations: [] },\n      new_task_triggers_str: '[]',\n      new_task_operations_str: '{}',\n      new_task_new_trigger: '',\n      new_task_new_operation: '',\n      new_task_new_operation_parent: '',\n      new_operation_id: 1,\n    };\n\n    this.inputChangeHandler = this.inputChangeHandler.bind(this);\n    this.formSubmitHandler = this.formSubmitHandler.bind(this);\n    this.taskDeleteClickHandler = this.taskDeleteClickHandler.bind(this);\n    this.addTriggerClickHandler = this.addTriggerClickHandler.bind(this);\n    this.addOperationClickHandler = this.addOperationClickHandler.bind(this);\n  }\n\n  inputChangeHandler(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      new_task_operation_map: { root: this.state.new_task_operations },\n      new_task_operations_str: JSON.stringify(\n        this.state.new_task_operations,\n        null,\n        4\n      ),\n    });\n    taskApis.fetchTasks().then((response) => {\n      this.setState({ tasks: response.data.tasks });\n    });\n    triggerApis.fetchTriggers().then((response) => {\n      this.setState({ triggers: response.data.triggers });\n    });\n    operationApis.fetchOperations().then((response) => {\n      this.setState({ operations: response.data.operations });\n    });\n  }\n\n  formSubmitHandler(event) {\n    event.preventDefault();\n    const task_name = this.state.new_task_name;\n    const task_triggers = this.state.new_task_triggers;\n    const task_operations = JSON.parse(this.state.new_task_operations_str);\n    let task_document = {\n      name: task_name,\n      triggers: task_triggers,\n      operations: task_operations,\n    };\n    taskApis.addTask(task_document).then((response) => {\n      taskApis.fetchTasks().then((response) => {\n        this.setState({ tasks: response.data.tasks });\n      });\n    });\n  }\n\n  taskDeleteClickHandler(event) {\n    const task_name =\n      event.target.parentElement.parentElement.children[1].innerHTML;\n    taskApis.deleteTask(task_name).then((response) => {\n      taskApis.fetchTasks().then((response) => {\n        this.setState({ tasks: response.data.tasks });\n      });\n    });\n  }\n\n  addTriggerClickHandler(event) {\n    const trigger_name = event.target.parentElement.children[2].value;\n    if (trigger_name !== '') {\n      this.setState({\n        new_task_triggers: [...this.state.new_task_triggers, trigger_name],\n      });\n    }\n  }\n\n  findOperation(tree, op_id) {\n    if (tree['id'] === op_id) {\n      return tree;\n    } else {\n      for (let i = 0; i < tree['sub_operations'].length; i++) {\n        let sub_res = this.findOperation(tree['sub_operations'][i], op_id);\n        if (sub_res !== null) {\n          return sub_res;\n        }\n      }\n    }\n    return null;\n  }\n\n  addOperationClickHandler(event) {\n    const new_operation_name = event.target.parentElement.children[2].value;\n    const new_operation_parent = event.target.parentElement.children[3].value;\n    if (new_operation_name === '' || new_operation_parent === '') return;\n    const new_operation_id = String(this.state.new_operation_id);\n    let new_operation = {\n      id: new_operation_id,\n      name: new_operation_name,\n      sub_operations: [],\n    };\n    let new_task_operation_map = JSON.parse(\n      JSON.stringify(this.state.new_task_operation_map)\n    );\n    new_task_operation_map[new_operation_id] = new_operation;\n    let new_task_operations = JSON.parse(\n      JSON.stringify(this.state.new_task_operations)\n    );\n    let parent_node = this.findOperation(\n      new_task_operations,\n      new_operation_parent\n    );\n    parent_node['sub_operations'].push(new_operation);\n    this.setState({\n      new_task_operation_map: new_task_operation_map,\n      new_task_operations: new_task_operations,\n      new_operation_id: this.state.new_operation_id + 1,\n      new_task_operations_str: JSON.stringify(new_task_operations, null, 4),\n    });\n  }\n\n  render() {\n    let task_rows = this.state.tasks.map((task, index) => {\n      return (\n        <tr key={'task_row_' + index}>\n          <td>{index + 1}</td>\n          <td>{task.name}</td>\n          <td>\n            <Button size=\"sm\" onClick={this.taskDeleteClickHandler}>\n              Delete\n            </Button>\n          </td>\n        </tr>\n      );\n    });\n    let trigger_options = this.state.triggers.map((trigger, index) => {\n      return (\n        <option value={trigger.name} key={'trigger_option_' + index}>\n          {trigger.name}\n        </option>\n      );\n    });\n\n    let operation_options = this.state.operations.map((operation, index) => {\n      return (\n        <option value={operation.name} key={'operation_option_' + index}>\n          {operation.name}\n        </option>\n      );\n    });\n\n    let operation_parent_options = [];\n    if (this.state.new_task_operation_map) {\n      for (let op_key in this.state.new_task_operation_map) {\n        operation_parent_options.push(\n          <option value={op_key} key={'parent_' + op_key}>\n            {op_key}\n          </option>\n        );\n      }\n    }\n\n    return (\n      <div className=\"pt-3\">\n        <h4>Task List</h4>\n        <Row>\n          <Table className=\"task-table\" striped={true}>\n            <thead>\n              <tr>\n                {this.taskTableHeaders.map((header) => (\n                  <th key={'header_' + header}>{header}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>{task_rows}</tbody>\n          </Table>\n        </Row>\n        <h4>Create a New Task</h4>\n        <Form id=\"create-task-form\" onSubmit={this.formSubmitHandler}>\n          <Form.Group as={Row} controlId=\"formTaskName\">\n            <Form.Label htmlFor=\"task-name\">Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              id=\"task-name\"\n              name=\"new_task_name\"\n              placeholder=\"Task Name\"\n              required\n              value={this.state.new_task_name}\n              onChange={this.inputChangeHandler}\n            />\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"formTaskTriggers\">\n            <Form.Label htmlFor=\"task_triggers\">Triggers</Form.Label>\n            <Form.Control\n              type=\"text\"\n              id=\"task-triggers\"\n              name=\"new_task_triggers_str\"\n              placeholder=\"Task Triggers\"\n              required\n              readOnly\n              value={JSON.stringify(this.state.new_task_triggers)}\n            />\n            <Form.Control\n              as=\"select\"\n              id=\"new-task-new_trigger\"\n              name=\"new_task_new_trigger\"\n              value={this.state.new_task_new_trigger}\n              className=\"mt-3\"\n              onChange={this.inputChangeHandler}\n            >\n              <option value=\"\"> Choose a new trigger......</option>\n              {trigger_options}\n            </Form.Control>\n            <Button\n              type=\"button\"\n              size=\"sm\"\n              className=\"mt-3\"\n              onClick={this.addTriggerClickHandler}\n            >\n              Add a new trigger\n            </Button>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"formTaskOperations\">\n            <Form.Label htmlFor=\"task-operations\">Operations</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows=\"12\"\n              id=\"task-operations\"\n              name=\"new_task_operations_str\"\n              placeholder=\"Task Operations\"\n              required\n              value={this.state.new_task_operations_str}\n              onChange={this.inputChangeHandler}\n              readOnly\n            />\n            <Form.Control\n              as=\"select\"\n              id=\"new-task-new-operation\"\n              name=\"new_task_new_operation\"\n              value={this.state.new_task_new_operation}\n              className=\"mt-3\"\n              onChange={this.inputChangeHandler}\n            >\n              <option value=\"\"> Choose a new operation......</option>\n              {operation_options}\n            </Form.Control>\n            <Form.Control\n              as=\"select\"\n              id=\"new-task-new_operation-parent\"\n              name=\"new_task_new_operation_parent\"\n              value={this.state.new_task_new_operation_parent}\n              className=\"mt-3\"\n              onChange={this.inputChangeHandler}\n            >\n              <option value=\"\"> Choose the new operation's parent......</option>\n              {operation_parent_options}\n            </Form.Control>\n            <Button\n              type=\"button\"\n              size=\"sm\"\n              className=\"mt-3\"\n              onClick={this.addOperationClickHandler}\n            >\n              Add a new operation\n            </Button>\n          </Form.Group>\n          <Button type=\"submit\" size=\"lg\">\n            Create\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(TaskList);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\nimport NavigationBar from '../../components/NavigationBar/NavigationBar';\nimport Container from 'react-bootstrap/Container';\nimport TaskList from './TaskList';\n\nclass Tasks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Aux>\n        <NavigationBar />\n        <Container>\n          <TaskList />\n        </Container>\n      </Aux>\n    );\n  }\n}\n\nexport default withRouter(Tasks);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Table from 'react-bootstrap/Table';\nimport triggerApis from '../../apis/trigger-apis';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\n\nclass TriggerList extends Component {\n  constructor(props) {\n    super(props);\n    this.triggerTableHeaders = ['#', 'Name', 'Type', 'Actions'];\n    this.state = {\n      triggers: [],\n      new_trigger_name: '',\n      new_trigger_type: 'Schedule',\n      new_trigger_schedule_time: '00:00',\n      new_trigger_schedule_repeat: 'day',\n    };\n    this.inputChangeHandler = this.inputChangeHandler.bind(this);\n    this.formSubmitHandler = this.formSubmitHandler.bind(this);\n    this.triggerDeleteClickHandler = this.triggerDeleteClickHandler.bind(this);\n  }\n\n  inputChangeHandler(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  componentDidMount() {\n    triggerApis.fetchTriggers().then((response) => {\n      this.setState({\n        triggers: response.data.triggers,\n      });\n    });\n  }\n\n  getFormOtherFields() {\n    switch (this.state.new_trigger_type) {\n      case 'Schedule':\n        return (\n          <Aux>\n            <Form.Label htmlFor=\"trigger-schedule-time\" className=\"pt-4\">\n              Time\n            </Form.Label>\n            <Form.Control\n              type=\"time\"\n              id=\"trigger-schedule-time\"\n              name=\"new_trigger_schedule_time\"\n              value={this.state.new_trigger_schedule_time}\n              onChange={this.inputChangeHandler}\n            />\n            <Form.Label htmlFor=\"trigger-schedule-repeat\" className=\"pt-4\">\n              Repeat\n            </Form.Label>\n            <Form.Control\n              as=\"select\"\n              id=\"trigger-schedule-repeat\"\n              name=\"new_trigger_schedule_repeat\"\n              value={this.state.new_trigger_schedule_repeat}\n              onChange={this.inputChangeHandler}\n            >\n              <option>Day</option>\n              <option>Week</option>\n            </Form.Control>\n          </Aux>\n        );\n        break;\n    }\n    return null;\n  }\n\n  getDocumentOtherFields(trigger_type) {\n    switch (trigger_type) {\n      case 'Schedule':\n        return {\n          time: this.state.new_trigger_schedule_time,\n          repeat: this.state.new_trigger_schedule_repeat.toLowerCase(),\n        };\n        break;\n    }\n  }\n\n  formSubmitHandler(event) {\n    event.preventDefault();\n    const trigger_name = this.state.new_trigger_name;\n    const trigger_type = this.state.new_trigger_type;\n    const other_fields = this.getDocumentOtherFields(trigger_type);\n    let trigger_document = {\n      name: trigger_name,\n      type: trigger_type.toLowerCase(),\n      ...other_fields,\n    };\n    triggerApis.addTrigger(trigger_document).then((response) => {\n      triggerApis.fetchTriggers().then((response) => {\n        this.setState({\n          triggers: response.data.triggers,\n        });\n      });\n    });\n  }\n\n  triggerDeleteClickHandler(event) {\n    const trigger_name =\n      event.target.parentElement.parentElement.children[1].innerHTML;\n    triggerApis.deleteTrigger(trigger_name).then((response) => {\n      triggerApis.fetchTriggers().then((response) => {\n        this.setState({\n          triggers: response.data.triggers,\n        });\n      });\n    });\n  }\n\n  render() {\n    let trigger_rows = this.state.triggers.map((trigger, index) => {\n      return (\n        <tr key={'trigger_row_' + index}>\n          <td>{index + 1}</td>\n          <td>{trigger.name}</td>\n          <td>\n            {trigger.type.charAt(0).toUpperCase() + trigger.type.slice(1)}\n          </td>\n          <td>\n            <Button size=\"sm\" onClick={this.triggerDeleteClickHandler}>\n              Delete\n            </Button>\n          </td>\n        </tr>\n      );\n    });\n    let other_fields = this.getFormOtherFields();\n    return (\n      <div className=\"pt-3\">\n        <h4>Trigger List</h4>\n        <Row>\n          <Table className=\"trigger-table\" striped={true}>\n            <thead>\n              <tr>\n                {this.triggerTableHeaders.map((header) => (\n                  <th key={'header_' + header}>{header}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>{trigger_rows}</tbody>\n          </Table>\n        </Row>\n        <h4>Create a New Trigger</h4>\n        <Form id=\"create-trigger-form\" onSubmit={this.formSubmitHandler}>\n          <Form.Group as={Row} controlId=\"formTriggerName\">\n            <Form.Label htmlFor=\"trigger-name\">Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              id=\"trigger-name\"\n              name=\"new_trigger_name\"\n              placeholder=\"Trigger Name\"\n              required\n              value={this.state.new_trigger_name}\n              onChange={this.inputChangeHandler}\n            />\n            <Form.Label htmlFor=\"trigger-type\" className=\"pt-4\">\n              Type\n            </Form.Label>\n            <Form.Control\n              as=\"select\"\n              id=\"trigger-type\"\n              name=\"new_trigger_type\"\n              defaultValue=\"Choose...\"\n              required\n              value={this.state.new_trigger_type}\n              onChange={this.inputChangeHandler}\n            >\n              <option>Schedule</option>\n            </Form.Control>\n            {other_fields}\n          </Form.Group>\n          <Button type=\"submit\" size=\"lg\">\n            Create\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(TriggerList);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\nimport NavigationBar from '../../components/NavigationBar/NavigationBar';\nimport Container from 'react-bootstrap/Container';\nimport TriggerList from './TriggerList';\n\nclass Triggers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Aux>\n        <NavigationBar />\n        <Container>\n          <TriggerList />\n        </Container>\n      </Aux>\n    );\n  }\n}\n\nexport default withRouter(Triggers);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport operationApis from '../../apis/operation-apis';\nimport Row from 'react-bootstrap/Row';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\n\nclass OperationList extends Component {\n  constructor(props) {\n    super(props);\n    this.operationTableHeaders = ['#', 'Name', 'Type', 'Actions'];\n    this.state = {\n      operations: [],\n      new_operation_name: '',\n      new_operation_type: 'Zoom',\n      new_operation_zoom_link: '',\n    };\n    this.inputChangeHandler = this.inputChangeHandler.bind(this);\n    this.operationDeleteClickHandler = this.operationDeleteClickHandler.bind(\n      this\n    );\n    this.formSubmitHandler = this.formSubmitHandler.bind(this);\n  }\n\n  componentDidMount() {\n    operationApis.fetchOperations().then((response) => {\n      this.setState({\n        operations: response.data.operations,\n      });\n    });\n  }\n\n  inputChangeHandler(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  operationDeleteClickHandler(event) {\n    const operation_name =\n      event.target.parentElement.parentElement.children[1].innerHTML;\n    operationApis.deleteOperation(operation_name).then((response) => {\n      operationApis.fetchOperations().then((response) => {\n        this.setState({\n          operations: response.data.operations,\n        });\n      });\n    });\n  }\n\n  formSubmitHandler(event) {\n    event.preventDefault();\n    const operation_name = this.state.new_operation_name;\n    const operation_type = this.state.new_operation_type;\n    let other_fields = {};\n    if (operation_type === 'Zoom') {\n      other_fields = { link: this.state.new_operation_zoom_link };\n    } else if (operation_type === 'Open Slides') {\n      other_fields = { path: this.state.new_operation_slides_path };\n    }\n    let operation_document = {\n      name: operation_name,\n      type: operation_type.toLowerCase(),\n      ...other_fields,\n    };\n\n    operationApis.addOperation(operation_document).then((response) => {\n      operationApis.fetchOperations().then((response) => {\n        this.setState({\n          operations: response.data.operations,\n        });\n      });\n    });\n  }\n\n  getOtherFields() {\n    if (this.state.new_operation_type === 'Zoom') {\n      return (\n        <Aux>\n          <Form.Label htmlFor=\"operation-zoom-link\" className=\"pt-4\">\n            Link\n          </Form.Label>\n          <Form.Control\n            type=\"text\"\n            id=\"operation-zoom-link\"\n            name=\"new_operation_zoom_link\"\n            value={this.state.new_operation_zoom_link}\n            onChange={this.inputChangeHandler}\n          />\n        </Aux>\n      );\n    } else if (this.state.new_operation_type === 'Open Slides') {\n      return (\n        <Aux>\n          <Form.Label htmlFor=\"operation-slides-path\" className=\"pt-4\">\n            Path to file\n          </Form.Label>\n          <Form.Control\n            type=\"text\"\n            id=\"operation-slides-path\"\n            name=\"new_operation_slides_path\"\n            value={this.state.new_operation_slides_path}\n            onChange={this.inputChangeHandler}\n          />\n        </Aux>\n      );\n    }\n  }\n\n  render() {\n    let operation_rows = this.state.operations.map((operation, index) => {\n      return (\n        <tr key={'operation_row_' + index}>\n          <td>{index + 1}</td>\n          <td>{operation.name}</td>\n          <td>\n            {operation.type.charAt(0).toUpperCase() + operation.type.slice(1)}\n          </td>\n          <td>\n            <Button size=\"sm\" onClick={this.operationDeleteClickHandler}>\n              Delete\n            </Button>\n          </td>\n        </tr>\n      );\n    });\n\n    let other_fields = this.getOtherFields();\n\n    return (\n      <div className=\"pt-3\">\n        <h4>Operation List</h4>\n        <Row>\n          <Table className=\"operation-table\" striped={true}>\n            <thead>\n              <tr>\n                {this.operationTableHeaders.map((header) => (\n                  <th key={'header_' + header}>{header}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>{operation_rows}</tbody>\n          </Table>\n        </Row>\n        <h4>Create a New Operation</h4>\n        <Form id=\"create-operation-form\" onSubmit={this.formSubmitHandler}>\n          <Form.Group as={Row} controlId=\"formOperationName\">\n            <Form.Label htmlFor=\"operation-name\">Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              id=\"operation-name\"\n              name=\"new_operation_name\"\n              placeholder=\"Operation Name\"\n              required\n              value={this.state.new_operation_name}\n              onChange={this.inputChangeHandler}\n            />\n            <Form.Label htmlFor=\"operation-type\" className=\"pt-4\">\n              Type\n            </Form.Label>\n            <Form.Control\n              as=\"select\"\n              id=\"operation-type\"\n              name=\"new_operation_type\"\n              defaultValue=\"Choose...\"\n              required\n              value={this.state.new_operation_type}\n              onChange={this.inputChangeHandler}\n            >\n              <option>Zoom</option>\n              <option>Open Slides</option>\n            </Form.Control>\n            {other_fields}\n          </Form.Group>\n          <Button type=\"submit\" size=\"lg\">\n            Create\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(OperationList);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\nimport NavigationBar from '../../components/NavigationBar/NavigationBar';\nimport Container from 'react-bootstrap/Container';\nimport OperationList from './OperationList';\n\nclass Operations extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Aux>\n        <NavigationBar />\n        <Container>\n          <OperationList />\n        </Container>\n      </Aux>\n    );\n  }\n}\n\nexport default withRouter(Operations);\n","import React from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport LoginForm from './containers/LoginForm/LoginForm';\nimport RegisterForm from './containers/RegisterForm/RegisterForm';\nimport Tasks from './containers/Tasks/Tasks';\nimport Triggers from './containers/Triggers/Triggers';\nimport Operations from './containers/Operations/Operations';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/\" exact>\n          <LoginForm />\n        </Route>\n        <Route path=\"/login\">\n          <LoginForm />\n        </Route>\n        <Route path=\"/register\">\n          <RegisterForm />\n        </Route>\n        <Route path=\"/triggers\">\n          <Triggers />\n        </Route>\n        <Route path=\"/operations\">\n          <Operations />\n        </Route>\n        <Route path=\"/tasks\">\n          <Tasks />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst app = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nReactDOM.render(\n  <React.StrictMode>{app}</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}